Metadata-Version: 2.4
Name: scaleforge
Version: 0.4.0a0
Summary: ScaleForge â€“ portable image upscaler powered by Real-ESRGAN
Author-email: ScaleForge Team <openhands@all-hands.dev>
License-Expression: MIT
Project-URL: Homepage, https://example.com/scaleforge
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: pydantic>=2.7
Requires-Dist: PyYAML>=6.0
Requires-Dist: click>=8.1.7
Requires-Dist: Pillow>=10.3.0
Provides-Extra: gui
Requires-Dist: kivy>=2.3.0; extra == "gui"
Provides-Extra: torch
Requires-Dist: torch>=2.0.0; sys_platform != "win32" and extra == "torch"
Requires-Dist: torch>=2.0.0; sys_platform == "win32" and extra == "torch"
Requires-Dist: realesrgan==0.2.5.0; extra == "torch"
Requires-Dist: basicsr==1.4.2; extra == "torch"
Requires-Dist: xformers>=0.0.22; sys_platform != "win32" and extra == "torch"
Requires-Dist: charset-normalizer<3.0.0; python_version >= "3.12" and extra == "torch"
Provides-Extra: dev
Requires-Dist: ruff>=0.4; extra == "dev"
Requires-Dist: pytest>=8; extra == "dev"
Requires-Dist: pytest-cov>=4; extra == "dev"
Requires-Dist: hypothesis>=6.100.0; extra == "dev"
Requires-Dist: pytest-mock>=3.0; extra == "dev"
Requires-Dist: ipython>=8.0; extra == "dev"

# ScaleForge

Image upscaling and enhancement toolkit

## GPU Detection & Capability Cache

ScaleForge automatically detects your GPU capabilities and caches the results for optimal performance:

- **Cache Location**: `${APP_ROOT}/gpu_caps.json`  
- **Key Information**:
  - GPU vendor (nvidia/amd/intel)
  - Recommended backend (torch-cuda/torch-rocm/torch-cpu/ncnn-vulkan)
  - Performance capabilities (max tile size, megapixels)
  - Detection timestamp

### Commands
- `scaleforge detect-backend`: Show current backend info
  - `--probe`: Force fresh GPU detection
  - `--debug`: Show detailed capability info

### Environment Overrides  
Set `SCALEFORGE_BACKEND` to override auto-selection:
- `torch-cuda`: NVIDIA GPUs
- `torch-rocm`: AMD GPUs
- `torch-cpu`: CPU fallback  
- `ncnn-vulkan`: Vulkan-based acceleration

Note: Values are conservatively tuned for stability. Advanced users can adjust via settings.


GPU Detection & Capability Cache
- Location: APP_ROOT/gpu_caps.json
- Fields: vendor, backend, max_tile_size, max_megapixels, detected_at, source
- Commands: scaleforge detect-backend --probe, scaleforge detect-backend --debug
- Env overrides: environment variables that can influence vendor/backend or capabilities (see docs for exact names)
